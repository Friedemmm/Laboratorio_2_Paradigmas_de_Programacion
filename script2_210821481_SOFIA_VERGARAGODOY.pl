player(1, "Juan", "red", 0, 0, 0, 10, P1),
player(2, "Mauricio", "yellow", 0, 0, 0, 10, P2),
piece("red", RedPiece),
piece("yellow", YellowPiece),
board(EmptyBoard),
game(P1, P2, EmptyBoard, 1, G0),
player_play(G0, P1, 1, G1),
player_play(G1, P2, 2, G3),
player_play(G3, P1, 1, G4),
player_play(G4, P2, 2, G5),
player_play(G5, P1, 1, G6),
player_play(G6, P2, 2, G7),
player_play(G7, P1, 1, G8),
write('¿Se puede jugar en el tablero vacío? '),
can_play(EmptyBoard),
nl,
game_get_board(G8, CurrentBoard),
write('¿Se puede jugar después de 11 movimientos? '),
can_play(CurrentBoard),
nl,
write('Jugador actual después de 11 movimientos (le tocaba a él después de la ultima pieza jugada): '),
get_current_player(G8, CurrentPlayer),
write(CurrentPlayer),
nl,
write('Verificación de victoria vertical: '),
check_vertical_win(CurrentBoard, VerticalWinner),
write(VerticalWinner),
nl,
write('Verificación de ganador: '),
who_is_winner(CurrentBoard, Winner),
write(Winner),
nl,
(is_draw(G8) -> 
    writeln('Si es empate')
    ; 
    writeln('No es empate') 
    ), 
nl,
end_game(G8, EndedGame),
write('Historial de movimientos: '),
game_history(EndedGame, History),
write(History),
nl,
write('Estado final del tablero: '),
game_get_board(EndedGame, FinalBoard),
write(FinalBoard).
